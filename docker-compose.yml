version: "3.3"

services:
  postgresql_container:
    container_name: sbv_postgres
    image: "postgres:13.3"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: spring_boot_vanilla
    ports:
      - 5433:5432
    volumes:
      - ~/pgsql-data:/var/lib/postgresql/data
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring-boot-vanilla

  yugabyte_container:
    container_name: sbv_yugabyte
    image: "yugabytedb/yugabyte:latest"
    environment:
      - POSTGRES_USER=yugabyte
      - POSTGRES_PASSWORD=yugabyte
      - POSTGRES_DB=spring_boot_vanilla
    ports:
      - 7000:7000
      - 9000:9000
      - 5433:5433
      - 9042:9042
    volumes:
      - ~/yugabyte-data:/root/var/data
      - ~/yugabyte-logs:/root/var/logs
    command: |
      bash -c '
      mkdir -p /var/ybinit
      echo "CREATE DATABASE $${POSTGRES_DB:-$${POSTGRES_USER}}            " > /var/ybinit/01-db.sql
      echo "create user $${POSTGRES_USER} password '$${POSTGRES_PASSWORD}'" > /var/ybinit/02-usr.sql
      echo "set log_statement='all'; set log_destination=stderr;          " > /var/ybinit/99-logging.sql
      # start YugabyteDB
      bin/yugabyted start --daemon=false --initial_scripts_dir=/var/ybinit --tserver_flags=ysql_enable_auth=true
      '
    healthcheck:
      test: ["CMD-SHELL", "postgres/bin/pg_isready -U yugabyte"]
      #test: ["CMD-SHELL", "yugabyted status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring-boot-vanilla

  redis_container:
    container_name: sbv_redis
    image: redis:6.2.3
    ports:
      - 6380:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - spring-boot-vanilla

  app:
    container_name: spring_boot_vanilla_persistence
    build:
      context: .
      #dockerfile: ./docker/Dockerfile
    ports:
      - 8080:8080
    networks:
      - spring-boot-vanilla
    depends_on:
      #postgresql_container:
      yugabyte_container:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/items"]
      interval: 10s
      timeout: 10s
      retries: 10

networks:
  spring-boot-vanilla:
